#!/usr/bin/env python

# By Gary Bernhardt.
# Dotfiles at: https://github.com/garybernhardt/dotfiles
#
# Usage examples:
#
# $ compressibility .vimrc
# file size 18888
# gzip size 6250 (33%)
# bz2 size 6182 (32%)
#
# $ compressibility bin
# Automatically tarring contents of bin
# file size 993280
# gzip size 307261 (30%)
# bz2 size 310495 (31%)
#
# $ cat .vimrc | compressibility
# file size 18888
# gzip size 6250 (33%)
# bz2 size 6182 (32%)

import sys
import zlib
import bz2
import os.path
import subprocess


def main():
    paths = sys.argv[1:]
    data = read_all_data(paths)
    size = len(data)
    print 'file size', size
    gzip_size = len(zlib.compress(data))
    print 'gzip size %i (%i%%)' % (gzip_size, percent(gzip_size, size))
    bz2_size = len(bz2.compress(data))
    print 'bz2 size %i (%i%%)' % (bz2_size, percent(bz2_size, size))


def read_all_data(paths):
    path_data = map(read_path, paths)
    if not path_data:
        path_data = [sys.stdin.read()]
    return ''.join(path_data)


def read_path(path):
    # If the path is a directory, tar it up; otherwise, just read it
    if os.path.isdir(path):
        sys.stderr.write("Automatically tarring contents of " + path + "\n")
        return subprocess.check_output(["tar", "-c", "-f", "-", path])
    else:
        return open(path, "r").read()


def percent(part, whole):
    return int(100.0 * part / whole)


if __name__ == '__main__':
    main()

